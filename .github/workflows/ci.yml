name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Stage 1: Build
  build:
    name: Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --frozen-lockfile
    
    - name: Cache node_modules
      uses: actions/cache@v4
      with:
        path: node_modules
        key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-modules-
    
    - name: Build application
      run: npm run build
    
    - name: Verify build output
      run: |
        if [ ! -d "out" ]; then
          echo "Build output directory 'out' not found"
          exit 1
        fi
        if [ ! -f "out/index.html" ]; then
          echo "index.html not found in build output"
          exit 1
        fi
        echo "Build verification successful"
        echo "Build size: $(du -sh out/)"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: out/
        retention-days: 1
    
    - name: Upload dependencies cache
      uses: actions/upload-artifact@v4
      with:
        name: node-modules
        path: node_modules/
        retention-days: 1

  # Stage 2: Quality Assurance (runs in parallel, only if build succeeds)
  
  # QA Job 1: Tests
  tests:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
    
    - name: Download dependencies cache
      uses: actions/download-artifact@v4
      with:
        name: node-modules
        path: node_modules/
    
    - name: Run Jest tests with coverage
      run: npm run test:coverage
    
    - name: Display coverage summary
      run: |
        echo "ðŸ“Š Coverage Report:"
        if [ -f "coverage/coverage-summary.json" ]; then
          node -e "
            const coverage = require('./coverage/coverage-summary.json');
            const total = coverage.total;
            console.log('Lines:      ' + total.lines.pct + '%');
            console.log('Functions:  ' + total.functions.pct + '%');
            console.log('Branches:   ' + total.branches.pct + '%');
            console.log('Statements: ' + total.statements.pct + '%');
            console.log('');
            console.log('âœ… All coverage thresholds (80%) enforced by Jest configuration');
          "
        else
          echo "Coverage summary not available"
        fi
    
    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/
        retention-days: 7
      if: always()

  # QA Job 2: Linting & Type Check
  lint-and-typecheck:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
    
    - name: Download dependencies cache
      uses: actions/download-artifact@v4
      with:
        name: node-modules
        path: node_modules/
    
    - name: Run TypeScript type checking
      run: npm run type-check
    
    - name: Run linting
      run: npm run lint

  # QA Job 3: CodeQL Security Analysis
  codeql-javascript:
    name: CodeQL JS/TS Analysis
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 20
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: javascript-typescript
        build-mode: none
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:javascript-typescript"

  # QA Job 4: CodeQL Actions Analysis
  codeql-actions:
    name: CodeQL Actions Analysis
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 15
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: actions
        build-mode: none
    
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:actions"
  
  # QA Job 5: Security - Dependency Vulnerability Scan
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'
        cache: 'npm'
    
    - name: Download dependencies cache
      uses: actions/download-artifact@v4
      with:
        name: node-modules
        path: node_modules/
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Check for known vulnerabilities
      run: npx audit-ci --moderate