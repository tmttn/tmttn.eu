name: Deploy to Production

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed
    branches: [main]

jobs:
  deploy-to-production:
    name: Deploy to Production Branch
    runs-on: ubuntu-latest
    
    # Only run if CI workflow succeeded
    if: github.event.workflow_run.conclusion == 'success'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for merging
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Deploy to production
      run: |
        echo "🚀 Starting deployment to production branch..."
        
        # Fetch the latest main branch
        git fetch origin main
        git checkout main
        
        # Fetch production branch (create if doesn't exist)
        if git ls-remote --exit-code --heads origin production; then
          echo "Production branch exists, fetching..."
          git fetch origin production
          git checkout production
          
          # Check if we're already up to date
          if git merge-base --is-ancestor origin/main HEAD; then
            echo "Production is already up to date with main"
            exit 0
          fi
          
          # Try to fast-forward first
          echo "Attempting fast-forward merge..."
          if git merge --ff-only origin/main; then
            echo "Successfully fast-forwarded production to main"
          else
            echo "Fast-forward not possible, performing rebase..."
            # Reset to remote state first to avoid conflicts
            git reset --hard origin/production
            if ! git rebase origin/main; then
              echo "❌ Rebase failed. This may indicate conflicts that need manual resolution."
              echo "Aborting rebase and exiting..."
              git rebase --abort
              exit 1
            fi
          fi
        else
          echo "Production branch doesn't exist, creating..."
          git checkout -b production
        fi
        
        # Push to production (force push if needed for deployment)
        echo "Pushing to production branch..."
        if ! git push origin production; then
          echo "Normal push failed, attempting force push for deployment..."
          git push --force origin production
        fi
        
        echo "✅ Successfully deployed to production branch"
    
    - name: Create deployment summary
      run: |
        echo "## 🚀 Production Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Source Branch**: main" >> $GITHUB_STEP_SUMMARY
        echo "- **Target Branch**: production" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.event.workflow_run.head_sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **CI Run**: [${{ github.event.workflow_run.html_url }}](${{ github.event.workflow_run.html_url }})" >> $GITHUB_STEP_SUMMARY
        echo "- **Status**: ✅ Success" >> $GITHUB_STEP_SUMMARY